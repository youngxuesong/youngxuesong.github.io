[{"title":"前端学习之路：VSCode保姆级使用教程","url":"/posts/ac56d399/","content":"\n在上一篇[《前端学习之路：从零开始搭建你的开发环境》](/posts/frontend-environment-setup/)中，我们已经安装好了 Visual Studio Code (VSCode)。作为目前前端开发领域的绝对主流，彻底玩转 VSCode 是提升开发效率的关键。\n\n本文将作为一份保姆级教程，带你深入了解 VSCode 的核心功能、必备插件和高效技巧，让你真正地“利其器”。\n\n## 1. 安装与汉化\n\n*   **下载**: 如果你还未安装，请访问 [VSCode 官网](https://code.visualstudio.com/) 下载对应版本。\n*   **安装**: 在 Windows 和 macOS 上，直接双击安装包按提示操作即可。在 Linux 上，可以使用系统自带的软件中心或命令行进行安装。\n*   **中文语言包 (汉化)**:\n    1.  打开 VSCode，使用快捷键 `Ctrl+Shift+X` (macOS: `⇧⌘X`) 打开扩展面板。\n    2.  在搜索框中输入 `Chinese (Simplified)`。\n    3.  找到 Microsoft 官方提供的“简体中文语言包”，点击 **Install**。\n    4.  安装后右下角会提示重启，点击 **Restart** 后，界面语言即变为中文。\n\n## 2. 核心界面概览\n\n熟悉 VSCode 的界面布局是高效使用的第一步。\n\n![VSCode UI](https://code.visualstudio.com/assets/docs/getstarted/userinterface/hero.png)\n\n1.  **活动栏 (Activity Bar)**: 最左侧的图标栏，用于切换不同的视图，如文件浏览器、搜索、Git、扩展等。\n2.  **侧边栏 (Side Bar)**: 活动栏右侧的区域，显示当前视图的具体内容（如文件列表）。\n3.  **编辑器组 (Editor Group)**: 占据中心位置的核心区域，用于编写和查看代码。\n4.  **面板 (Panel)**: 编辑器下方区域，可以显示终端、调试控制台、输出信息等。\n5.  **状态栏 (Status Bar)**: 最底部的蓝色条，显示当前项目和文件的状态信息（如 Git 分支、错误和警告、编码格式等）。\n\n## 3. 前端开发必备插件推荐\n\nVSCode 的强大之处在于其无与伦比的扩展生态。以下是前端开发中几乎人手必备的插件，能极大地提升你的开发体验。\n\n*   **Prettier - Code formatter**: 自动代码格式化工具。可以统一团队的代码风格，让你告别手动调整缩进和换行的烦恼。\n*   **ESLint**: JavaScript 代码质量和风格检查工具。它能实时发现代码中的潜在错误和不规范写法，是保证代码质量的利器。\n*   **Auto Close Tag**: 自动闭合 HTML/XML 标签。当你输入 `<div>` 时，它会自动帮你补全 `</div>`。\n*   **Auto Rename Tag**: 自动重命名成对的 HTML/XML 标签。当你修改开始标签时，它会自动修改对应的结束标签。\n*   **Path Intellisense**: 智能路径提示。在引入文件（如图片、CSS、JS模块）时，它会自动提示和补全文件路径。\n*   **Live Server**: 启动一个本地开发服务器，并支持实时刷新。当你保存 HTML/CSS/JS 文件时，浏览器会自动刷新，无需手动操作。\n*   **GitLens — Git supercharged**: 极大地增强了 VSCode 内置的 Git 功能。你可以清晰地看到每一行代码的提交历史、作者等信息。\n*   **indent-rainbow**: 使用彩虹色来高亮显示代码的缩进层次，让代码结构一目了然。\n*   **Better Comments**: 让注释更具可读性。可以用 `*`, `!`, `?`, `TODO` 等前缀来标记不同类型的注释，并以不同颜色高亮显示。\n\n## 4. 核心技巧与快捷键\n\n掌握一些核心技巧和快捷键，能让你的开发效率倍增。\n\n*   **命令面板 (`Ctrl+Shift+P` / `⇧⌘P`)**: 这是 VSCode 的“神经中枢”，你可以通过它执行几乎所有的命令，如安装插件、执行任务、修改设置等。忘记快捷键时，先按它就对了。\n*   **终端 (`Ctrl+` `)**: VSCode 内置了强大的集成终端，无需切换窗口即可执行各种命令行操作（如 `npm install`, `git commit`）。\n*   **全局搜索 (`Ctrl+Shift+F` / `⇧⌘F`)**: 在整个项目文件夹中搜索指定的文本。\n*   **文件内搜索 (`Ctrl+F` / `⌘F`)**: 在当前打开的文件中进行搜索。\n*   **快速打开文件 (`Ctrl+P` / `⌘P`)**: 输入文件名，快速定位并打开项目中的任意文件。\n\n### 从命令行启动\n\n在终端中，你可以使用 `code` 命令快速操作 VSCode：\n\n```bash\n# 在 VSCode 中打开当前目录\ncode .\n\n# 在 VSCode 中打开指定目录\ncode /path/to/your/project\n```\n*如果 `code` 命令无效，请打开命令面板 (`Ctrl+Shift+P`)，搜索并执行 `Shell Command: Install 'code' command in PATH`，然后重启终端即可。*\n\n## 5. 创建你的第一个项目\n\n让我们用一个简单的 “Hello World” 来实践一下：\n\n1.  在电脑上创建一个空文件夹，例如 `my-first-project`。\n2.  在 VSCode 中，点击“文件” > “打开文件夹”，选择刚刚创建的文件夹。\n3.  在左侧的文件浏览器中，点击“新建文件”图标，创建一个名为 `index.html` 的文件。\n4.  在 `index.html` 编辑器中，输入一个感叹号 `!`，然后按下 `Tab` 键。VSCode 内置的 Emmet 功能会自动为你生成一个标准的 HTML5 骨架。\n5.  在 `<body>` 标签内，添加一个 `<h1>` 标签，内容为 `Hello, VSCode!`。\n6.  在文件上右键，选择 “**Open with Live Server**”。\n\n现在，你的默认浏览器会自动打开一个新页面，显示 “Hello, VSCode!”。尝试修改文件内容并保存，你会发现浏览器页面也自动更新了！\n\n---\n\n至此，你已经掌握了 VSCode 的基础用法和核心功能。不断地在实际项目中去使用和探索，你会发现它更多的魅力。祝你编码愉快！\n","tags":["教程","前端","VSCode"]},{"title":"前端学习之路：从零开始搭建你的开发环境","url":"/posts/1319af8/","content":"\n踏上前端学习之旅，一个稳定、高效的开发环境是成功的基石。所谓“工欲善其事，必先利其器”，合适的工具不仅能提升你的开发效率，还能让你在学习过程中更加顺畅。\n\n本教程将一步步指导你，从零开始搭建一个完整的前端开发环境，涵盖操作系统、代码编辑器、版本控制工具和运行环境的全部设置。\n\n## 1. 操作系统的选择\n\n前端开发对操作系统的兼容性非常友好，你可以在 Windows、macOS 或 Linux 上进行开发。不过，从业界主流和开发体验来看：\n\n*   **macOS / Linux**: 是许多开发者的首选。它们基于 UNIX，拥有强大的命令行工具和丰富的开发者生态，能让你更方便地使用各种开发工具。\n*   **Windows**: 完全可以胜任前端开发。为了获得更好的开发体验，强烈建议安装 **WSL (Windows Subsystem for Linux)**。WSL 让你可以在 Windows 系统上无缝地运行一个真实的 Linux 环境，从而使用和 Linux 一样的命令行工具和开发生态。\n\n## 2. 代码编辑器：Visual Studio Code (VSCode)\n\n一个优秀的代码编辑器是程序员的“第二大脑”。在这里，我们强烈推荐目前前端社区最主流的选择：**Visual Studio Code (VSCode)**。\n\n*   **下载地址**: [https://code.visualstudio.com/](https://code.visualstudio.com/)\n\nVSCode 由微软开发，它免费、开源，并且具备以下优点：\n\n*   **轻量且强大**：启动速度快，性能优异。\n*   **智能的代码提示**：内置对 JavaScript、TypeScript 和 Node.js 的强大支持。\n*   **丰富的插件生态**：拥有海量的扩展插件，你可以通过安装插件来增强各种功能，如代码美化 (Prettier)、代码检查 (ESLint)、Git 集成 (GitLens) 等。\n*   **高度可定制**：从主题到快捷键，几乎所有东西都可以根据你的喜好进行配置。\n\n## 3. 版本控制工具：Git\n\nGit 是目前世界上最先进的分布式版本控制系统。简单来说，它就是用来管理你的代码变更历史的工具。无论是个人项目还是团队协作，Git 都是必不可少的技能。\n\n1.  **下载与安装**\n    访问 [Git 官网](https://git-scm.com/) 下载对应你操作系统的安装包，然后按照默认设置完成安装即可。\n\n2.  **配置基本信息**\n    安装完成后，打开你的终端（命令行工具），输入以下两条命令来配置你的用户名和邮箱。这些信息会出现在你的每一次代码提交记录中。\n\n    ```bash\n    # 设置你的用户名\n    git config --global user.name \"Your Name\"\n\n    # 设置你的邮箱\n    git config --global user.email \"youremail@example.com\"\n    ```\n\n## 4. 运行环境：Node.js\n\n现代前端开发已经离不开 Node.js。虽然你主要在浏览器中编写和运行代码，但几乎所有的前端工具链（如项目构建、包管理、代码压缩等）都依赖于 Node.js 环境。\n\n*   **下载地址**: [https://nodejs.org/](https://nodejs.org/)\n\n访问 Node.js 官网，推荐下载 **LTS (Long Term Support)** 版本，因为它更稳定，适合绝大多数开发场景。安装过程同样是按照默认设置下一步即可。\n\n安装完成后，Node.js 会自带一个非常重要的工具：**npm (Node Package Manager)**，它是 Node.js 的包管理器，你可以用它来安装和管理项目所需的各种依赖库（例如 React, Vue 等）。\n\n你可以通过在终端输入以下命令来检查 Node.js 和 npm 是否安装成功：\n\n```bash\n# 检查 Node.js 版本\nnode -v\n\n# 检查 npm 版本\nnpm -v\n```\n\n如果能成功显示版本号，说明环境已准备就绪。\n\n---\n\n## 总结\n\n恭喜你！完成以上四个步骤后，你就拥有了一个功能齐全、与业界主流看齐的前端开发环境。现在，你可以满怀信心地开始学习 HTML、CSS 和 JavaScript，并逐步探索更高级的框架和技术，如 Vue.js、React 等。\n\n祝你的前端学习之旅一帆风顺！\n","tags":["教程","前端","环境搭建"]},{"title":"申请永久免费的HIDNS域名","url":"/posts/80034969/","content":"\nHiDNS 最近调整了其免费域名的获取策略，为有实际建站需求的用户提供了一个“终身免费”计划。通过简单的工单申请，您就有机会获得一个有效期至 **2099年** 的免费二级域名，非常适合用于个人博客或项目展示。\n\n本文将为您详细介绍完整的申请流程和注意事项。\n\n## 核心申请条件\n\n要成功获得并保有这个永久免费域名，您需要满足以下核心条件：\n\n1.  **合规使用**：申请到的域名必须用于合法的网站或网络服务，例如个人博客。严禁用于钓鱼、盗版分发、传播病毒或发送垃圾邮件等非法活动。\n2.  **激活资格**：在域名初次审核通过后，您有 **7天** 的激活窗口期。在此期间，必须将域名成功解析并绑定到您的网站，并为其配置好 **SSL 证书**。完成这一步后，域名会自动升级为永久免费资格。\n\n---\n\n## 申请步骤\n\n### 第一步：注册 HiDNS 账号\n\n1.  访问 **[HiDNS 官网](https://www.hidoha.net/)**。\n2.  点击右上角的“注册”按钮，填写信息并完成注册。\n3.  检查您的邮箱，点击验证链接以激活您的账户。\n\n### 第二步：提交域名申请订单\n\n1.  登录您的 HiDNS 账号，在菜单中找到并点击“**新订单**”。\n2.  在订单页面，输入您想要的**域名前缀**，并从下拉列表中选择一个**域名后缀**（如 `.hidns.co`、`.hidns.vip` 等）。\n3.  点击“**检查**”。如果页面没有提示错误，说明该域名当前可用。\n\n### 第三步：通过工单申请免费开通\n\n1.  下单后，回到 HiDNS 首页，您会在“**最近的订单**”列表中看到刚刚创建的订单。\n2.  点击进入该订单详情，然后找到并点击“**提交工单**”按钮。\n3.  按照以下格式填写工单内容：\n    *   **主题**：`申请免费域名`\n    *   **消息**：\n        ```text\n        尊敬的 HiDNS 团队：\n\n        我希望申请这个域名。\n\n        我承诺此域名将严格用于个人博客或其他合法的网络服务，并且保证不会将其用于任何形式的滥用行为，包括但不限于钓鱼网站、影视资源、盗版内容分发、病毒或木马传播以及发送垃圾邮件等。\n\n        感谢您的审核与支持。\n\n        此致，\n        ```\n4.  提交工单后，请耐心等待人工审核。审核通过后，您会收到通知，此时域名有效期为一年。\n\n### 第四步：激活永久免费资格\n\n这是最关键的一步！在域名审核通过后的 **7天内**，您必须：\n\n1.  将该域名解析到您的服务器或网站平台（例如，通过添加 CNAME 或 A 记录）。\n2.  为您的网站**成功申请并配置 SSL 证书**，确保可以通过 `https://` 访问。\n\n完成以上操作后，系统会自动检测并将您的域名有效期延长至 2099年。如果等待数日后状态仍未更新，您可以再次提交工单，附上您的网站地址，请求客服手动为您升级。\n\n## 如何使用\n\n在 HiDNS 的域名管理后台，您可以方便地添加或修改 **CNAME、A、MX** 等常见的 DNS 解析记录，将其指向您的网站服务器、企业邮箱等服务。\n\n---\n\n希望这篇教程能帮助您成功申请到心仪的免费域名！\n","tags":["教程","免费域名","HiDNS"]},{"title":"内地银行“跨境支付通”超详细教程：零手续费秒级汇款至香港","url":"/posts/be811694/","content":"\n最近，中国内地各大银行悄然上线了一项名为“跨境支付通”的新功能，并迅速在全网引发热议。它之所以备受关注，是因为切实解决了成千上万大陆用户在跨境汇款过程中的核心痛点。\n\n本文将为您详细解读“跨境支付通”是什么，并以工商银行和招商银行为例，从0到1演示如何通过它将资金零手续费、秒级汇款至香港银行账户（如汇丰银行）。\n\n## 什么是“跨境支付通”？\n\n“跨境支付通”是内地与香港金融管理局联合推动的一项创新跨境汇款服务。它的核心是打通了中国内地的“内地跨行清算系统 (CNAPS)”和香港的“快速支付系统 (FPS，即转数快)”。\n\n这一举措极大地提升了内地与香港居民之间小额跨境汇款的效率和便捷性。\n\n## “跨境支付通”的核心优势\n\n根据实测体验，其优点非常突出：\n\n1.  **零手续费**：完全免费，颠覆了传统跨境电汇动辄几十上百元的收费模式。\n2.  **秒级到账**：汇款速度极快，几乎是实时到账，彻底告别了传统方式需要等待1-2个工作日的漫长时间。\n3.  **操作简便**：流程类似支付宝转账，支持通过手机号码直接汇款，无需填写复杂的银行账户信息。\n4.  **自动换汇**：用户直接输入人民币金额，系统会自动完成购汇和结算，无需手动操作。\n5.  **服务时间长**：支持早上7点到晚上11点进行汇款，覆盖了大部分非工作时间，节假日也能使用。\n\n## 支持银行列表\n\n目前，首批参与该计划的银行包括：\n\n*   **内地银行**：工商银行、农业银行、中国银行、建设银行、交通银行、招商银行\n*   **香港银行**：中银香港、东亚银行、建银亚洲、恒生银行、汇丰银行、工银亚洲\n\n*预计未来会有更多银行陆续加入。*\n\n---\n\n## 实操演示：如何使用“跨境支付通”\n\n在操作前，请确保您的香港银行账户已经将手机号绑定为“转数快”的预设收款方式。您可以在对应香港银行的App中检查和设置。\n\n### 演示一：招商银行 App\n\n1.  打开招商银行 App，在顶部搜索框输入“**跨境支付通**”并进入。\n2.  选择“**手机号汇款**”。\n3.  **申报信息**：\n    *   地区选择：**香港**\n    *   交易编码和汇款用途：可参考图示（通常选择“因私旅游”或“其他私人旅行”等）。\n    *   汇款附言：可不填。\n4.  **收款信息**：\n    *   收款人手机号：填写您在香港银行绑定的手机号。\n    *   收款姓名：填写您姓名的大写拼音（姓在前，名在后）。\n    *   收款银行：选择对应的香港银行，例如“香港上海汇丰银行有限公司”。\n5.  点击“下一步”，输入**人民币汇款金额**。系统会自动换算成港币。\n    *   **注意**：单笔限额1万元人民币，每日限额5万元人民币，且会占用每年5万美元的个人外汇额度。\n6.  确认信息无误后提交，即可完成汇款。\n\n招商银行App会很快提示“入账成功”，同时香港银行App也会收到到账通知。\n\n### 演示二：工商银行 App\n\n1.  打开工商银行 App，点击右上角的“**客服**”按钮，输入“**跨境支付通**”并点击弹出的功能按钮。\n2.  同样选择“**手机号汇款**”。\n3.  输入收款人手机号后，系统可能会自动识别并带出银行名称，非常智能。\n4.  补充您的**收款户名**（姓名大写拼音，姓在前）。\n5.  点击“下一步”，输入**人民币汇款金额**和**资金用途**。\n6.  最后确认所有信息，点击“确认汇款”。\n\n交易会立即处理，汇款同样是秒级到账。\n\n---\n\n## 优缺点总结\n\n### 优点\n\n*   **成本低**：零手续费。\n*   **速度快**：秒级到账，服务时间长。\n*   **流程简**：无需手动购汇，支持手机号汇款。\n\n### 缺点\n\n1.  **占用外汇额度**：依然会占用每人每年5万美元的购汇额度。\n2.  **仅支持南向汇款**：目前仅支持从内地汇款至香港（南向资金）。香港居民可以通过此服务汇款至内地（北向资金），但内地居民无法反向操作。\n\n## 结语\n\n“跨境支付通”的推出，无疑是小额跨境汇款领域的一大便民举措。它极大地降低了汇款的时间和金钱成本，尤其适合有频繁小额资金往来香港需求的用户。有了这个“神器”，像兴业银行“寰宇人生卡”这类主打跨境免手续费的借记卡，在汇款至香港这一场景下，优势已不再明显。\n\n希望这篇详细的教程能帮助您顺利完成操作。如果您在过程中遇到任何问题，欢迎留言交流。\n","tags":["跨境支付","香港银行","教程"]},{"title":"gemini使用指南","url":"/posts/8690e815/","content":"\n## 什么是 Gemini？\n\nGemini 是由 Google DeepMind 开发的一系列尖端的多模态人工智能模型。与传统AI模型不同，Gemini 从一开始就为多模态而设计，这意味着它可以无缝地理解、操作和融合文本、代码、图像、音频和视频等多种类型的信息。\n\n### 主要特点：\n*   **多模态能力**: 可以同时处理和推理多种数据格式。\n*   **强大的性能**: 在多项基准测试中展现出卓越的性能，能够处理复杂的推理任务。\n*   **灵活的规模**: 提供从在数据中心运行的 Ultra 版本，到在移动设备上高效运行的 Nano 版本等多种规模，以适应不同场景的需求。\n\n---\n\n## 如何使用 Gemini？\n\nGemini 的使用方式主要分为两种：面向普通用户的网页应用和面向开发者的 API。\n\n### 1. Gemini 网页版 (普通用户)\n\n对于大多数用户而言，与 Gemini 互动最简单直接的方式就是通过其官方网页应用。\n\n*   **访问地址**: [gemini.google.com](https://gemini.google.com)\n*   **功能**:\n    *   **对话与问答**: 像与人聊天一样，向 Gemini 提问、寻求建议、获取信息。\n    *   **内容创作**: 让 Gemini 帮助你写邮件、写诗、写代码、构思创意等。\n    *   **图像理解**: 上传一张图片，让 Gemini 描述图片内容、回答关于图片的问题，甚至根据图片生成代码。\n    *   **语言翻译**: 支持多种语言之间的快速翻译。\n\n### 2. Gemini API (开发者)\n\n开发者可以通过 Gemini API 将 Gemini 的强大功能集成到自己的应用程序或服务中。\n\n#### 快速开始: Google AI Studio\n\nGoogle AI Studio 是一个基于 Web 的工具，可以帮助开发者快速上手和原型化 Gemini 应用。\n\n1.  **访问 [Google AI Studio](https://aistudio.google.com/)**。\n2.  使用您的 Google 账户登录。\n3.  在左侧菜单中点击 **\"Get API key\"** 来创建一个新的 API 密钥。请妥善保管此密钥。\n\n#### 在代码中使用 (Python 示例)\n\n首先，需要安装 Google 的 Python SDK：\n```bash\npip install -q -U google-generativeai\n```\n\n然后，您可以使用以下代码与 Gemini API 进行交互：\n\n```python\nimport google.generativeai as genai\n\n# 使用您刚刚获取的 API 密钥进行配置\n# 建议通过环境变量等方式安全地管理你的 API Key\ngenai.configure(api_key=\"YOUR_API_KEY\")\n\n# 选择要使用的模型\nmodel = genai.GenerativeModel('gemini-pro') # 或者 'gemini-pro-vision' 用于多模态\n\n# 发送你的提示 (Prompt)\nprompt = \"请解释一下什么是“量子纠缠”，用通俗易懂的语言。\"\nresponse = model.generate_content(prompt)\n\n# 打印出 Gemini 的回答\nprint(response.text)\n```\n\n---\n\n### 3. Gemini CLI (命令行工具)\n\n对于喜欢在终端环境中工作的开发者和高级用户，Google 最近开源了一款名为 `gemini-cli` 的官方命令行工具。它允许你直接从命令行与 Gemini API 交互。\n\n*   **开源地址**: [github.com/google-gemini/gemini-cli](https://github.com/google-gemini/gemini-cli)\n*   **安装方式**:\n    如果你已经配置好了 Go 语言环境，可以通过以下命令进行安装：\n    ```bash\n    go install github.com/google-gemini/gemini-cli/cmd/gemini@latest\n    ```\n*   **基础用法**:\n    安装完成后，你需要先设置好你的 API 密钥（通常是设置一个 `GEMINI_API_KEY` 环境变量）。然后就可以直接使用了：\n    ```bash\n    # 基础文本提问\n    gemini \"给我五个关于太空探索的有趣事实\"\n\n    # 结合图片进行提问\n    gemini \"详细描述这张图片的内容\" my-cat.png\n\n    # 使用管道符处理输入\n    cat code.py | gemini \"审查这段 Python 代码的潜在 bug\"\n    ```\n*   **优势**:\n    *   无需编写代码即可快速测试和使用 Gemini。\n    *   可以轻松地与 Shell 脚本和其他命令行工具集成。\n    *   支持文本和图像输入。\n\n## 高效提问 (Prompt) 技巧\n\n为了让 Gemini 发挥最大效用，构造清晰、有效的提示 (Prompt) 至关重要。\n\n*   **明确角色**: 告诉 Gemini 它应该扮演什么角色。例如：“你是一名资深的软件工程师，请帮我审查以下代码的漏洞。”\n*   **提供上下文**: 给出足够的背景信息，帮助 Gemini 理解你的需求。\n*   **具体化指令**: 避免模糊的提问。指令越具体，回答越精准。例如，不要只说“写一个故事”，而是说“写一个关于一只猫在赛博朋克城市里冒险的短篇故事”。\n*   **要求格式**: 如果你需要特定格式的输出（如 JSON、Markdown 表格），请在提示中明确说明。\n*   **追问与迭代**: 如果第一次的回答不完美，可以通过追问来引导和优化结果。\n\n---\n\n## 总结\n\n无论您是希望在日常生活中获得智能助力的普通用户，还是希望构建下一代 AI 应用的开发者，Gemini 都提供了强大而易用的工具。通过掌握其基本用法和提问技巧，您可以解锁其巨大潜力，让工作和创作变得更加高效和富有创意。","tags":["AI"],"categories":["AI工具"]},{"title":"Hexo博客美化","url":"/posts/560d7f1/","content":"\n\n# Hexo博客美化全攻略：主题安装与高级配置\n\n> 看完这篇教程，让你的Hexo博客从\"素颜\"变身\"高级定制\"！\n\n## 视频教程快速导航\n- [基础环境搭建教程](#)（第一期）\n- [本期美化实战](#)\n- [示例博客预览](https://your-blog-url.com)\n\n## 一、主题安装与初始化\n\n### 1. 安装Anzhiyu主题\n```bash\n# 在博客根目录执行\ngit clone -b main https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu\nnpm install hexo-renderer-stylus --save\n```\n\n### 2. 启用主题\n修改根目录 `_config.yml`：\n```yaml\ntheme: anzhiyu\n```\n\n### 3. 复制主题配置文件\n```bash\n# Windows用户手动操作：\n1. 进入 themes/anzhiyu/_config.yml \n2. 复制到博客根目录\n3. 重命名为 _config.anzhiyu.yml\n```\n\n### 4. 本地预览效果\n```bash\nhexo clean && hexo g && hexo s\n```\n访问 `http://localhost:4000` 查看主题效果\n\n\n\n## 二、核心功能配置\n\n### 1. 生成标签页 & 分类页\n```bash\n# 创建标签页\nhexo new page tags\n# 编辑 source/tags/index.md 添加：\ntype: \"tags\"\n\n# 创建分类页\nhexo new page categories\n# 编辑 source/categories/index.md 添加：\ntype: \"categories\"\n```\n\n### 2. 配置文章模板\n修改 `scaffolds/post.md`：\n```markdown\n---\ntitle: {{ title }}\ndate: {{ date }}\ntags: \ncategories: \ncover: \ntop: 0 # 置顶优先级（数值越大越靠前）\nsticky: false # 是否置顶\n---\n\n<!-- 视频嵌入示例 -->\n<div class=\"video-container\">\n  <iframe \n    src=\"https://www.youtube.com/embed/VIDEO_ID\" \n    frameborder=\"0\" \n    allowfullscreen>\n  </iframe>\n</div>\n\n<!-- 正文内容 -->\n```\n\n### 3. 文章置顶功能\n```bash\nnpm install hexo-generator-index-pin-top --save\n```\n在文章Front-matter中添加：\n```yaml\ntop: 1  # 置顶优先级\nsticky: true  # 开启置顶\n```\n\n### 4. 本地搜索功能\n```bash\nnpm install hexo-generator-search --save\n```\n在 `_config.anzhiyu.yml` 中启用：\n```yaml\nlocal_search:\n  enable: true\n```\n\n## 三、个性化设置指南\n\n### 1. 基础信息配置\n修改根目录 `_config.yml`：\n```yaml\n# 站点信息\ntitle: hexo 美化\nsubtitle: 技术与生活的交汇点\ndescription: 分享前端开发、云原生技术及效率工具\nkeywords: Hexo,Node.js,Cloudflare\nauthor: yonger\nlanguage: zh-CN\n```\n\n### 2. 导航栏定制\n在 `_config.anzhiyu.yml` 中配置：\n```yaml\nmenu:\n  SOS: \n    path: /sos/\n    icon: fas fa-exclamation-triangle\n  博客本体:\n    path: https://yonger.com\n    icon: fas fa-blog\n  技术文档:\n    path: /docs/\n    icon: fas fa-book\n    children:\n      - name: Docker指南\n        path: /docker/\n      - name: Kubernetes实战\n        path: /k8s/\n```\n\n### 3. 文章路径优化\n修改根目录 `_config.yml`：\n```yaml\n# 优化后的文章路径\npermalink: :category/:title/\n```\n\n### 4. 特效功能开启\n在 `_config.anzhiyu.yml` 中启用特效：\n```yaml\n# 鼠标点击烟花特效\nfireworks: true\n\n# 页面背景粒子效果\ncanvas_ribbon: true\n\n# 滚动进度条\nreading_progress: true\n```\n\n## 四、高级功能配置\n\n### 1. 嵌入视频内容\n在文章中添加：\n```markdown\n<div class=\"video-container\">\n  <iframe \n    src=\"https://www.youtube.com/embed/VIDEO_ID\" \n    frameborder=\"0\" \n    allowfullscreen>\n  </iframe>\n</div>\n```\n\n### 2. 添加验证文件\n在 `/source/` 目录创建文件：\n```bash\n# 示例：Google Ads验证文件\necho \"google.com, pub-XXXXXXXXXXXX, DIRECT, XXXXXXXX\" > source/ads.txt\n```\n\n### 3. 广告集成配置\n在 `_config.anzhiyu.yml` 中配置：\n```yaml\nad:\n  google_adsense:\n    enable: true\n    auto_ads: true\n    js: https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\n    client: ca-pub-XXXXXXXXXXXXXXXX\n```\n\n## 五、部署与验证\n\n### 1. 推送到云端\n```bash\nhexo clean && hexo deploy\n```\n\n### 2. 验证变更\n| 功能 | 验证URL | 预期效果 |\n|------|---------|----------|\n| 标签页 | /tags/ | 显示所有标签 |\n| 分类页 | /categories/ | 显示分类目录 |\n| 自定义页面 | /sos/ | 显示警告内容 |\n| 文章路径 | /tech/your-article/ | 优化后的URL结构 |\n\n## 六、主题深度定制技巧\n\n### 1. 元素定位方法\n1. 浏览器中按 `F12` 打开开发者工具\n2. 使用元素选择器定位目标组件\n3. 复制元素的class或id名称\n4. 在主题配置文件中搜索关键词\n\n### 2. 图标资源推荐\n- [Font Awesome](https://fontawesome.com/)：5000+免费图标\n- [Remix Icon](https://remixicon.com/)：精致开源图标库\n- [Tabler Icons](https://tabler-icons.io/)：MIT许可的扁平化图标\n\n### 3. 配置项搜索技巧\n在 `_config.anzhiyu.yml` 中：\n- 使用 `Ctrl+F` 搜索关键词\n- 常用配置项关键词：\n  - `header`：头部设置\n  - `footer`：页脚设置\n  - `social`：社交媒体链接\n  - `comment`：评论系统\n  - `analytics`：网站统计\n\n## 七、主题官方资源\n- [Anzhiyu主题文档](https://github.com/anzhiyu-c/hexo-theme-anzhiyu)\n- [Butterfly主题文档](https://butterfly.js.org/)\n- [Hexo插件市场](https://hexo.io/plugins/)\n\n> **调试技巧**：每次修改配置后，使用 `hexo s` 本地预览，确认无误再部署！\n\n\n\n","tags":["教程","Hexo"],"categories":["博客教程","博客搭建"]},{"title":"Hexo博客零成本搭建指南：从环境配置到云端部署","url":"/posts/560d8f6/","content":"\n\n\n# Hexo博客零成本搭建指南：从环境配置到云端部署\n\n> 无需服务器，只需一个域名，打造极速个人博客！\n\n## 为什么选择Hexo？\n\n- ⚡️ **极速高效**：基于Node.js的静态博客框架，生成速度快\n- 💸 **零成本运营**：依托Cloudflare免费托管，无需服务器\n- 🛡️ **抗攻击性强**：部署在Cloudflare边缘网络，自带DDoS防护\n- 📱 **多设备同步**：通过Git管理，可在任意设备更新内容\n- 🎨 **高度可定制**：丰富的主题生态系统（下期将介绍美化技巧）\n\n## 准备工作\n\n### 必备账号\n1. [GitHub账号](https://github.com/signup)\n2. [Cloudflare账号](https://dash.cloudflare.com/sign-up)\n3. 域名（推荐[Namecheap](https://www.namecheap.com/)或[Cloudflare注册](https://www.cloudflare.com/products/registrar/))\n\n### 软件安装\n\n```bash\n# 验证安装成功的命令\nnode -v  # 检查Node.js版本\nnpm -v   # 检查npm版本\ngit --version  # 检查Git版本\n```\n\n| 软件 | 官网 | 备注 |\n|------|------|------|\n| Node.js | [nodejs.org](https://nodejs.org/) | JavaScript运行环境 |\n| Git | [git-scm.com](https://git-scm.com/) | 版本控制系统 |\n| VS Code | [code.visualstudio.com](https://code.visualstudio.com/) | 代码编辑器（可选但推荐） |\n\n> **环境配置技巧**：更换npm源加速安装\n> ```bash\n> npm config set registry https://repo.huaweicloud.com/repository/npm/\n> ```\n\n## 完整搭建流程\n\n### 步骤1：配置Git环境\n\n```bash\n# 设置全局用户名和邮箱（使用GitHub注册信息）\ngit config --global user.name \"YourGitHubUsername\"\ngit config --global user.email \"your-email@example.com\"\n\n# 生成SSH密钥（一路回车使用默认设置）\nssh-keygen -t ed25519 -C \"your-email@example.com\"\n```\n\n将公钥(`~/.ssh/id_ed25519.pub`内容)添加到[GitHub SSH设置](https://github.com/settings/keys)\n\n```bash\n# 测试连接\nssh -T git@github.com\n```\n\n### 步骤2：创建GitHub仓库\n- 仓库名格式：`<username>.github.io`\n- 选择**Public**仓库\n\n\n<!-- ![GitHub仓库创建示意图](https://example.com/github-repo-setup.png) -->\n\n### 步骤3：初始化Hexo博客\n\n```bash\n# 全局安装Hexo\nnpm install hexo-cli -g\n\n# 创建博客目录\nhexo init my-blog\ncd my-blog\n\n# 安装依赖\nnpm install\n\n# 本地预览\nhexo clean && hexo g && hexo s\n```\n访问 `http://localhost:4000` 查看默认博客\n\n### 步骤4：部署到GitHub Pages\n\n1. 安装部署插件\n```bash\nnpm install hexo-deployer-git --save\n```\n\n2. 修改`_config.yml`末尾添加：\n```yaml\ndeploy:\n  type: git\n  repo: git@github.com:<username>/<username>.github.io.git\n  branch: main\n```\n\n3. 首次部署执行：\n```bash\nhexo clean && hexo deploy\n```\n\n> **权限问题解决方案**（Windows）：\n> ```powershell\n> Set-ExecutionPolicy RemoteSigned -Scope CurrentUser\n> ```\n\nyoungxuesong.github.io\n\n### 步骤5：部署到Cloudflare Pages\n\n1. 登录[Cloudflare控制台](https://dash.cloudflare.com/)\n2. 进入 **Workers & Pages** → **Create application** → **Pages**\n3. 连接GitHub账户，选择你的仓库\n4. 保持默认设置，点击 **Save and Deploy**\n\n<!-- ![Cloudflare Pages设置界面](https://example.com/cloudflare-pages-setup.png) -->\n\n5. (可选) 添加自定义域名\n6. 仓库改为**Private**（增强安全性）\n\n## 博客管理指南\n\n### 创建新文章\n```bash\nhexo new \"我的第一篇博文\"\n```\n文章Markdown文件位于`source/_posts/`\n\n### 插入图片（使用图床）\n1. 推荐国内图床：[SM.MS](https://sm.ms/), [阿里云OSS](https://www.aliyun.com/product/oss)\n2. 使用Markdown语法插入：\n```markdown\n![图片描述](https://example.com/image.jpg)\n```\n\n### 工作流程\n1. 本地写作：`hexo new \"标题\"`\n2. 预览效果：`hexo clean && hexo g && hexo s`\n3. 部署更新：`hexo clean && hexo deploy`\n\n## 效果展示\n\n<!-- ![基础Hexo博客界面](https://example.com/hexo-default-theme.png) -->\n> 当前为默认主题，下一期将教大家使用Butterfly主题美化成专业博客\n\n## 常见问题解决\n\n| 问题 | 解决方案 |\n|------|----------|\n| 部署后页面无更新 | 清除浏览器缓存，等待CDN刷新（约5分钟） |\n| `hexo deploy` 报错 | 检查SSH密钥配置和仓库权限 |\n| 图片加载缓慢 | 更换国内图床或使用Cloudflare Images |\n| 安装依赖超时 | 使用科学上网或更换国内npm源 |\n\n## 下期预告：博客美化实战\n- 安装Butterfly主题\n- 定制化界面设计\n- 添加实用插件（搜索/评论/分析）\n- 高级功能：音乐播放器、看板娘、特效等\n\n---\n\n> **技术改变生活**：Hexo不仅是一个博客框架，更是你技术成长的见证。从今天开始记录你的思考与成长吧！\n\n**项目源码**：[GitHub - hexojs/hexo](https://github.com/hexojs/hexo)  \n**主题仓库**：[GitHub - jerryc127/hexo-theme-butterfly](https://github.com/jerryc127/hexo-theme-butterfly)\n\n*本教程完全免费，如果对你有帮助，请在点赞支持！*","tags":["教程","Hexo"],"categories":["博客教程","博客搭建"]},{"title":"Hexo插件使用指南","url":"/posts/560d8f5/","content":"\n# Hexo插件使用指南\n\nHexo是一个强大的博客框架，通过使用各种插件可以大大增强博客的功能。本文将介绍一些常用的Hexo插件及其使用方法。\n\n## 1. 图片处理插件\n\n### hexo-asset-img\n这个插件可以将markdown中的图片路径转换为asset_img语法，使得图片在Typora和Hexo中都能正常显示。\n\n安装方法：\n```bash\nnpm install hexo-asset-img --save\n```\n\n## 2. 标签外挂插件\n\n### hexo-butterfly-tag-plugins-plus\n这是一个功能强大的标签外挂插件，支持多种自定义标签，可以创建更丰富的文章内容。\n\n安装方法：\n```bash\nnpm install hexo-butterfly-tag-plugins-plus --save\n```\n\n使用示例：\n```markdown\n{% note primary %}\n这是一条提示信息\n{% endnote %}\n```\n\n## 3. 评论系统插件\n\n### Giscus\nGiscus是一个基于GitHub Discussions的评论系统，可以轻松集成到Hexo博客中。\n\n配置步骤：\n1. 在GitHub上创建一个新的公开仓库\n2. 在仓库设置中启用Discussions功能\n3. 安装Giscus GitHub App\n4. 在博客配置文件中添加相关配置\n\n## 4. 搜索插件\n\n### hexo-generator-search\n这个插件可以为博客添加搜索功能。\n\n安装方法：\n```bash\nnpm install hexo-generator-search --save\n```\n\n## 5. 文章字数统计插件\n\n### hexo-wordcount\n这个插件可以统计文章的字数、阅读时间等信息。\n\n安装方法：\n```bash\nnpm install hexo-wordcount --save\n```\n\n## 总结\n\n以上介绍的插件只是Hexo生态中的一小部分。通过合理使用这些插件，可以让你的博客功能更加丰富，用户体验更好。在使用插件时，建议：\n\n1. 仔细阅读插件的文档\n2. 注意插件之间的兼容性\n3. 定期更新插件以获取新功能和bug修复\n4. 不要安装过多插件，以免影响博客性能\n\n希望这篇文章对你有所帮助！如果你有任何问题，欢迎在评论区留言讨论。 ","tags":["教程","Hexo","插件"],"categories":["博客教程","博客搭建"]},{"title":"Hello World","url":"/posts/4a17b156/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]